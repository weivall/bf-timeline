// Code generated by protoc-gen-go.
// source: soccer.proto
// DO NOT EDIT!

/*
Package soccer is a generated protocol buffer package.

It is generated from these files:
	soccer.proto

It has these top-level messages:
	TimelineReport
	UpdateDetail
	Score
*/
package soccer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UpdateType int32

const (
	UpdateType_KickOff           UpdateType = 0
	UpdateType_Goal              UpdateType = 1
	UpdateType_YellowCard        UpdateType = 2
	UpdateType_RedCard           UpdateType = 3
	UpdateType_FirstHalfEnd      UpdateType = 4
	UpdateType_SecondHalfEnd     UpdateType = 5
	UpdateType_SecondHalfKickOff UpdateType = 6
)

var UpdateType_name = map[int32]string{
	0: "KickOff",
	1: "Goal",
	2: "YellowCard",
	3: "RedCard",
	4: "FirstHalfEnd",
	5: "SecondHalfEnd",
	6: "SecondHalfKickOff",
}
var UpdateType_value = map[string]int32{
	"KickOff":           0,
	"Goal":              1,
	"YellowCard":        2,
	"RedCard":           3,
	"FirstHalfEnd":      4,
	"SecondHalfEnd":     5,
	"SecondHalfKickOff": 6,
}

func (x UpdateType) String() string {
	return proto.EnumName(UpdateType_name, int32(x))
}
func (UpdateType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TimelineReport_Status int32

const (
	TimelineReport_IN_PLAY  TimelineReport_Status = 0
	TimelineReport_COMPLETE TimelineReport_Status = 1
)

var TimelineReport_Status_name = map[int32]string{
	0: "IN_PLAY",
	1: "COMPLETE",
}
var TimelineReport_Status_value = map[string]int32{
	"IN_PLAY":  0,
	"COMPLETE": 1,
}

func (x TimelineReport_Status) String() string {
	return proto.EnumName(TimelineReport_Status_name, int32(x))
}
func (TimelineReport_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type UpdateDetail_Team int32

const (
	UpdateDetail_home UpdateDetail_Team = 0
	UpdateDetail_away UpdateDetail_Team = 1
)

var UpdateDetail_Team_name = map[int32]string{
	0: "home",
	1: "away",
}
var UpdateDetail_Team_value = map[string]int32{
	"home": 0,
	"away": 1,
}

func (x UpdateDetail_Team) String() string {
	return proto.EnumName(UpdateDetail_Team_name, int32(x))
}
func (UpdateDetail_Team) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type TimelineReport struct {
	EventTypeId        uint32                `protobuf:"varint,1,opt,name=eventTypeId" json:"eventTypeId,omitempty"`
	EventId            uint64                `protobuf:"varint,2,opt,name=eventId" json:"eventId,omitempty"`
	Score              *Score                `protobuf:"bytes,3,opt,name=score" json:"score,omitempty"`
	TimeElapsed        int32                 `protobuf:"varint,4,opt,name=timeElapsed" json:"timeElapsed,omitempty"`
	ElapsedRegularTime int32                 `protobuf:"varint,5,opt,name=elapsedRegularTime" json:"elapsedRegularTime,omitempty"`
	UpdateDetails      []*UpdateDetail       `protobuf:"bytes,6,rep,name=updateDetails" json:"updateDetails,omitempty"`
	Status             TimelineReport_Status `protobuf:"varint,7,opt,name=status,enum=soccer.TimelineReport_Status" json:"status,omitempty"`
	InPlayMatchStatus  UpdateType            `protobuf:"varint,8,opt,name=inPlayMatchStatus,enum=soccer.UpdateType" json:"inPlayMatchStatus,omitempty"`
}

func (m *TimelineReport) Reset()                    { *m = TimelineReport{} }
func (m *TimelineReport) String() string            { return proto.CompactTextString(m) }
func (*TimelineReport) ProtoMessage()               {}
func (*TimelineReport) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TimelineReport) GetScore() *Score {
	if m != nil {
		return m.Score
	}
	return nil
}

func (m *TimelineReport) GetUpdateDetails() []*UpdateDetail {
	if m != nil {
		return m.UpdateDetails
	}
	return nil
}

type TimelineReport_FullTimeElapsed struct {
	Hour int32 `protobuf:"varint,1,opt,name=hour" json:"hour,omitempty"`
	Min  int32 `protobuf:"varint,2,opt,name=min" json:"min,omitempty"`
	Sec  int32 `protobuf:"varint,3,opt,name=sec" json:"sec,omitempty"`
}

func (m *TimelineReport_FullTimeElapsed) Reset()         { *m = TimelineReport_FullTimeElapsed{} }
func (m *TimelineReport_FullTimeElapsed) String() string { return proto.CompactTextString(m) }
func (*TimelineReport_FullTimeElapsed) ProtoMessage()    {}
func (*TimelineReport_FullTimeElapsed) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type UpdateDetail struct {
	UpdateTime         *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=updateTime" json:"updateTime,omitempty"`
	UpdateId           int32                      `protobuf:"varint,2,opt,name=updateId" json:"updateId,omitempty"`
	Team               UpdateDetail_Team          `protobuf:"varint,3,opt,name=team,enum=soccer.UpdateDetail_Team" json:"team,omitempty"`
	TeamName           string                     `protobuf:"bytes,4,opt,name=teamName" json:"teamName,omitempty"`
	MatchTime          int32                      `protobuf:"varint,5,opt,name=matchTime" json:"matchTime,omitempty"`
	ElapsedRegularTime int32                      `protobuf:"varint,6,opt,name=elapsedRegularTime" json:"elapsedRegularTime,omitempty"`
	Type               UpdateType                 `protobuf:"varint,7,opt,name=type,enum=soccer.UpdateType" json:"type,omitempty"`
	UpdateType         UpdateType                 `protobuf:"varint,8,opt,name=updateType,enum=soccer.UpdateType" json:"updateType,omitempty"`
}

func (m *UpdateDetail) Reset()                    { *m = UpdateDetail{} }
func (m *UpdateDetail) String() string            { return proto.CompactTextString(m) }
func (*UpdateDetail) ProtoMessage()               {}
func (*UpdateDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UpdateDetail) GetUpdateTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type Score struct {
	Home *Score_ScoreDetail `protobuf:"bytes,1,opt,name=home" json:"home,omitempty"`
	Away *Score_ScoreDetail `protobuf:"bytes,2,opt,name=away" json:"away,omitempty"`
}

func (m *Score) Reset()                    { *m = Score{} }
func (m *Score) String() string            { return proto.CompactTextString(m) }
func (*Score) ProtoMessage()               {}
func (*Score) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Score) GetHome() *Score_ScoreDetail {
	if m != nil {
		return m.Home
	}
	return nil
}

func (m *Score) GetAway() *Score_ScoreDetail {
	if m != nil {
		return m.Away
	}
	return nil
}

type Score_ScoreDetail struct {
	Name                      string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Score                     int32   `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	HalfTimeScore             int32   `protobuf:"varint,3,opt,name=halfTimeScore" json:"halfTimeScore,omitempty"`
	FullTimeScore             int32   `protobuf:"varint,4,opt,name=fullTimeScore" json:"fullTimeScore,omitempty"`
	PenaltiesScore            int32   `protobuf:"varint,5,opt,name=penaltiesScore" json:"penaltiesScore,omitempty"`
	PenaltiesSequence         []int32 `protobuf:"varint,6,rep,name=penaltiesSequence" json:"penaltiesSequence,omitempty"`
	Games                     int32   `protobuf:"varint,7,opt,name=games" json:"games,omitempty"`
	Sets                      int32   `protobuf:"varint,8,opt,name=sets" json:"sets,omitempty"`
	NumberOfYellowCards       int32   `protobuf:"varint,9,opt,name=numberOfYellowCards" json:"numberOfYellowCards,omitempty"`
	NumberOfRedCards          int32   `protobuf:"varint,10,opt,name=numberOfRedCards" json:"numberOfRedCards,omitempty"`
	NumberOfCards             int32   `protobuf:"varint,11,opt,name=numberOfCards" json:"numberOfCards,omitempty"`
	NumberOfCorners           int32   `protobuf:"varint,12,opt,name=numberOfCorners" json:"numberOfCorners,omitempty"`
	NumberOfCornersFirstHalf  int32   `protobuf:"varint,13,opt,name=numberOfCornersFirstHalf" json:"numberOfCornersFirstHalf,omitempty"`
	NumberOfCornersSecondHalf int32   `protobuf:"varint,14,opt,name=numberOfCornersSecondHalf" json:"numberOfCornersSecondHalf,omitempty"`
	BookingPoints             int32   `protobuf:"varint,15,opt,name=bookingPoints" json:"bookingPoints,omitempty"`
}

func (m *Score_ScoreDetail) Reset()                    { *m = Score_ScoreDetail{} }
func (m *Score_ScoreDetail) String() string            { return proto.CompactTextString(m) }
func (*Score_ScoreDetail) ProtoMessage()               {}
func (*Score_ScoreDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func init() {
	proto.RegisterType((*TimelineReport)(nil), "soccer.TimelineReport")
	proto.RegisterType((*TimelineReport_FullTimeElapsed)(nil), "soccer.TimelineReport.FullTimeElapsed")
	proto.RegisterType((*UpdateDetail)(nil), "soccer.UpdateDetail")
	proto.RegisterType((*Score)(nil), "soccer.Score")
	proto.RegisterType((*Score_ScoreDetail)(nil), "soccer.Score.ScoreDetail")
	proto.RegisterEnum("soccer.UpdateType", UpdateType_name, UpdateType_value)
	proto.RegisterEnum("soccer.TimelineReport_Status", TimelineReport_Status_name, TimelineReport_Status_value)
	proto.RegisterEnum("soccer.UpdateDetail_Team", UpdateDetail_Team_name, UpdateDetail_Team_value)
}

func init() { proto.RegisterFile("soccer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 784 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x54, 0xdd, 0x6e, 0xd3, 0x4a,
	0x10, 0x3e, 0x69, 0xe2, 0x34, 0x99, 0xfc, 0xd4, 0xd9, 0xd3, 0x23, 0xb9, 0xd1, 0x41, 0x54, 0x29,
	0x42, 0x55, 0x05, 0x29, 0x0a, 0xe2, 0x06, 0x71, 0x01, 0x2a, 0x29, 0x54, 0xf4, 0x27, 0xda, 0x84,
	0x8b, 0x5e, 0xa1, 0x8d, 0xb3, 0x49, 0xad, 0x3a, 0x5e, 0xe3, 0x1f, 0xaa, 0x4a, 0xbc, 0x18, 0x8f,
	0xc1, 0x5b, 0xf0, 0x06, 0xdc, 0xb2, 0xb3, 0x6b, 0x27, 0x76, 0x9a, 0x70, 0x93, 0xcc, 0x7c, 0xf3,
	0xed, 0xce, 0xec, 0x37, 0x33, 0x86, 0x7a, 0x28, 0x6c, 0x9b, 0x07, 0x5d, 0x3f, 0x10, 0x91, 0x20,
	0x65, 0xed, 0xb5, 0x1f, 0xcf, 0x84, 0x98, 0xb9, 0xfc, 0x58, 0xa1, 0xe3, 0x78, 0x7a, 0x1c, 0x39,
	0x73, 0x1e, 0x46, 0x6c, 0xee, 0x6b, 0x62, 0xe7, 0x57, 0x11, 0x9a, 0x23, 0x89, 0xb9, 0x8e, 0xc7,
	0x29, 0xf7, 0x45, 0x10, 0x91, 0x7d, 0xa8, 0xf1, 0x6f, 0xdc, 0x8b, 0x46, 0xf7, 0x3e, 0x3f, 0x9b,
	0x58, 0x85, 0xfd, 0xc2, 0x61, 0x83, 0x66, 0x21, 0x62, 0xc1, 0xb6, 0x72, 0x65, 0x74, 0x4b, 0x46,
	0x4b, 0x34, 0x75, 0xc9, 0x01, 0x18, 0xa1, 0x2d, 0x02, 0x6e, 0x15, 0x25, 0x5e, 0xeb, 0x35, 0xba,
	0x49, 0x55, 0x43, 0x04, 0xa9, 0x8e, 0x61, 0x02, 0x2c, 0xa3, 0xef, 0x32, 0x3f, 0xe4, 0x13, 0xab,
	0x24, 0xa9, 0x06, 0xcd, 0x42, 0xa4, 0x0b, 0x84, 0x6b, 0x93, 0xf2, 0x59, 0xec, 0xb2, 0x00, 0x4b,
	0xb4, 0x0c, 0x45, 0x5c, 0x13, 0x21, 0xaf, 0xa1, 0x11, 0xfb, 0x13, 0x16, 0xf1, 0xf7, 0x3c, 0x62,
	0x8e, 0x1b, 0x5a, 0xe5, 0xfd, 0xa2, 0x4c, 0xbf, 0x9b, 0xa6, 0xff, 0x9c, 0x09, 0xd2, 0x3c, 0x95,
	0xbc, 0x82, 0xb2, 0x14, 0x24, 0x8a, 0x43, 0x6b, 0x5b, 0xde, 0xdf, 0xec, 0x3d, 0x4a, 0x0f, 0xe5,
	0x65, 0xe9, 0x0e, 0x15, 0x89, 0x26, 0x64, 0xf2, 0x16, 0x5a, 0x8e, 0x37, 0x70, 0xd9, 0xfd, 0x05,
	0x8b, 0xec, 0x1b, 0x1d, 0xb4, 0x2a, 0xea, 0x06, 0x92, 0x4f, 0x8b, 0xa2, 0xd1, 0x87, 0xe4, 0xf6,
	0x19, 0xec, 0x9c, 0xc6, 0xae, 0x3b, 0xca, 0xbc, 0x9b, 0x40, 0xe9, 0x46, 0xc4, 0x81, 0xd2, 0xdc,
	0xa0, 0xca, 0x26, 0x26, 0x14, 0xe7, 0x8e, 0xa7, 0x84, 0x36, 0x28, 0x9a, 0x88, 0x84, 0xdc, 0x56,
	0x12, 0x4b, 0x44, 0x9a, 0x9d, 0x03, 0x28, 0xeb, 0x4b, 0x49, 0x0d, 0xb6, 0xcf, 0x2e, 0xbf, 0x0c,
	0xce, 0xdf, 0x5d, 0x9b, 0xff, 0x90, 0x3a, 0x54, 0x4e, 0xae, 0x2e, 0x06, 0xe7, 0xfd, 0x51, 0xdf,
	0x2c, 0x74, 0x7e, 0x6f, 0x41, 0x3d, 0x2b, 0x84, 0x54, 0x0d, 0xb4, 0x14, 0x4a, 0xdd, 0x82, 0xea,
	0x58, 0xbb, 0xab, 0x27, 0xa6, 0x9b, 0x4e, 0x8c, 0x92, 0x41, 0x4d, 0x0c, 0xcd, 0xb0, 0x49, 0x1b,
	0x2a, 0xda, 0x4b, 0x66, 0xc0, 0xa0, 0x0b, 0x9f, 0x3c, 0x87, 0x52, 0xc4, 0xd9, 0x5c, 0x15, 0xd8,
	0xec, 0xed, 0xad, 0x6b, 0x42, 0x77, 0x24, 0x09, 0x54, 0xd1, 0xf0, 0x2a, 0xfc, 0xbf, 0x64, 0xb2,
	0x08, 0x9c, 0x85, 0x2a, 0x5d, 0xf8, 0xe4, 0x7f, 0xa8, 0xce, 0x51, 0xb2, 0x4c, 0xff, 0x97, 0xc0,
	0x86, 0x31, 0x29, 0x6f, 0x1c, 0x93, 0xa7, 0xb2, 0x30, 0xd9, 0x8c, 0xa4, 0xd1, 0xeb, 0xda, 0xa4,
	0xe2, 0xa4, 0xb7, 0x10, 0x06, 0xd9, 0x9b, 0x9b, 0x9a, 0x61, 0x75, 0xda, 0x50, 0xc2, 0x37, 0x91,
	0x0a, 0xb6, 0x70, 0xce, 0xa5, 0xfa, 0xd2, 0x62, 0x77, 0xec, 0x5e, 0x2a, 0xff, 0xc3, 0x00, 0x43,
	0x6d, 0x00, 0x4a, 0x83, 0xd1, 0x44, 0xec, 0xbd, 0xdc, 0x7a, 0xe8, 0xdf, 0x64, 0x48, 0x15, 0x0d,
	0xe9, 0x78, 0x85, 0x52, 0xf8, 0xef, 0x74, 0xa4, 0xb5, 0x7f, 0x96, 0xa0, 0x96, 0x41, 0x71, 0x9c,
	0x3c, 0x96, 0x64, 0xab, 0x52, 0x65, 0x93, 0xdd, 0x74, 0x43, 0x75, 0xd7, 0x92, 0x95, 0x7c, 0x02,
	0x8d, 0x1b, 0xe6, 0x4e, 0x51, 0xa5, 0xe1, 0x62, 0x7f, 0x0d, 0x9a, 0x07, 0x91, 0x35, 0x4d, 0x26,
	0x56, 0xb3, 0xf4, 0xea, 0xe6, 0x41, 0xa9, 0x72, 0xd3, 0xe7, 0x1e, 0x73, 0x23, 0x87, 0x87, 0x9a,
	0xa6, 0x1b, 0xb7, 0x82, 0x92, 0x67, 0xd0, 0x5a, 0x22, 0xfc, 0x6b, 0xcc, 0x3d, 0x9b, 0xab, 0xc5,
	0x35, 0xe8, 0xc3, 0x00, 0xd6, 0x3d, 0x93, 0xf5, 0xeb, 0x2d, 0x95, 0x75, 0x2b, 0x07, 0x5f, 0x18,
	0xf2, 0x48, 0x2f, 0x9e, 0x5c, 0x18, 0xb4, 0xc9, 0x0b, 0xf8, 0xd7, 0x8b, 0xe7, 0x63, 0x1e, 0x5c,
	0x4d, 0xaf, 0xb9, 0xeb, 0x8a, 0xbb, 0x13, 0x16, 0x4c, 0x42, 0xab, 0xaa, 0x28, 0xeb, 0x42, 0xe4,
	0x08, 0xcc, 0x14, 0xa6, 0x7c, 0xa2, 0xe9, 0xa0, 0xe8, 0x0f, 0x70, 0xd4, 0x20, 0xc5, 0x34, 0xb1,
	0xa6, 0x35, 0xc8, 0x81, 0xe4, 0x10, 0x76, 0x16, 0x80, 0x08, 0x3c, 0x1e, 0x84, 0x56, 0x5d, 0xf1,
	0x56, 0x61, 0xb9, 0x84, 0xd6, 0x0a, 0x74, 0xea, 0x04, 0x61, 0xf4, 0x51, 0x0a, 0x6f, 0x35, 0xd4,
	0x91, 0x8d, 0x71, 0xf2, 0x06, 0xf6, 0x56, 0x62, 0x43, 0x6e, 0x0b, 0x6f, 0xa2, 0x0e, 0x37, 0xd5,
	0xe1, 0xcd, 0x04, 0x7c, 0xc9, 0x58, 0x88, 0x5b, 0xc7, 0x9b, 0x0d, 0x84, 0xe3, 0x49, 0x11, 0x77,
	0xf4, 0x4b, 0x72, 0xe0, 0xd1, 0x77, 0x80, 0xe5, 0xc4, 0xe3, 0xe7, 0xe5, 0x93, 0x63, 0xdf, 0x5e,
	0x4d, 0xa7, 0x7a, 0xc0, 0x3f, 0x08, 0xe6, 0x9a, 0x05, 0xd2, 0x04, 0x58, 0xea, 0x69, 0x6e, 0x21,
	0x2d, 0x11, 0xcc, 0x2c, 0xca, 0xcf, 0x55, 0x7d, 0x51, 0x72, 0xdf, 0x9b, 0x98, 0x25, 0xd2, 0x82,
	0xc6, 0xb2, 0x0e, 0x84, 0x0c, 0xf2, 0x1f, 0xb4, 0x96, 0x50, 0x9a, 0xa2, 0x3c, 0x2e, 0xab, 0xcf,
	0xd0, 0xcb, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x89, 0x1f, 0x0c, 0xbf, 0xde, 0x06, 0x00, 0x00,
}
